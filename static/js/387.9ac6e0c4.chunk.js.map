{"version":3,"file":"static/js/387.9ac6e0c4.chunk.js","mappings":"+SAEMA,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAEXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCH,IADxB,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAIjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,YAA0BR,IADpB,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIfI,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAAA,EAAAA,IAAA,wBACJH,EADI,kBACkBU,IAFb,uBACpBL,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdK,EAAY,mCAAG,WAAMH,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCR,IAD/B,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAML,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCR,IAD5B,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,yKC1BfQ,EAAcC,EAAAA,EAAAA,GAAH,+DAKXC,EAASD,EAAAA,EAAAA,GAAH,wDAKNE,EAASF,EAAAA,EAAAA,EAAH,0OAWNG,EAAUH,EAAAA,EAAAA,EAAH,uH,SC+BpB,EA/CgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAS,mCAAG,8GAEQZ,EAAAA,EAAAA,IAAgBS,GAFxB,OAGS,KADjBhB,EAFQ,QAGFoB,QACVC,EAAAA,OAAAA,KACE,0BACA,yCACA,QAGJN,EAAWf,GAVG,qJAAH,qDAgBfmB,GAlBC,CAmBF,GAAE,CAACH,KAGF,8BACGF,IACC,SAACN,EAAD,UACGM,EAAQQ,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,UAACd,EAAD,YACE,0BACE,SAACC,EAAD,UAASa,OAEX,0BACE,SAACZ,EAAD,UAAUW,QALDrB,EADF,OActB,C","sources":["API/fetchMovies.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'c62a19b7b1f5a1f79f97b2c472539d70',\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\nexport const ReviewsList = styled.ul`\n  padding: 50px;\n  margin-bottom: 0;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Author = styled.p`\n  border-radius: 65px;\n  background: #BDB76B;\n  box-shadow: 18px 18px 36px #9b8f90, -15px -15px 36px #ffeff0;\n  width: 110px;\n  padding: 20px;\n  text-align: center;\n  color: #585b84;\n  font-size: 18px;\n`;\n\nexport const Comment = styled.p`\n  border: 2px solid #ffeff0;\n  border-radius: 10px;\n  padding: 10px;\n  margin-right: 50px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { getMovieReviews } from 'API/fetchMovies';\nimport { ReviewsList, Review, Author, Comment } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const results = await getMovieReviews(movieId);\n        if (results.length === 0) {\n          Report.info(\n            'No information found =(',\n            'There are no reviews on this movie yet',\n            'Okay'\n          );\n        }\n        setReviews(results);\n      } catch (error) {\n      } finally {\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <ReviewsList>\n          {reviews.map(({ id, content, author }) => (\n            <Review key={id}>\n              <div>\n                <Author>{author}</Author>\n              </div>\n              <div>\n                <Comment>{content}</Comment>\n              </div>\n            </Review>\n          ))}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["searchParams","URLSearchParams","api_key","axios","getTrendingMovies","data","results","getMovieDetails","id","getMovieByName","name","getMovieCast","cast","getMovieReviews","ReviewsList","styled","Review","Author","Comment","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","length","Report","map","content","author"],"sourceRoot":""}