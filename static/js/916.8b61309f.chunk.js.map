{"version":3,"file":"static/js/916.8b61309f.chunk.js","mappings":"+SAEMA,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAEXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,6BAAgCH,IADxB,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAIjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,YAA0BR,IADpB,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIfI,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAAA,EAAAA,IAAA,wBACJH,EADI,kBACkBU,IAFb,uBACpBL,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAOdK,EAAY,mCAAG,WAAMH,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCR,IAD/B,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAML,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAkCR,IAD5B,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD,qICzBfQ,EAAaC,EAAAA,EAAAA,GAAH,sJASVC,EAAQD,EAAAA,EAAAA,GAAH,sBAELE,EAAQF,EAAAA,EAAAA,IAAH,kFAMLG,EAAUH,EAAAA,EAAAA,EAAH,2G,kBC0BpB,EAtCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAaU,GAASG,KAAKJ,EAC5B,GAAE,CAACC,IAECT,EAAL,CAGoB,IAAhBA,EAAKa,QACPC,EAAAA,OAAAA,KACE,0BACA,qDACA,QAWJ,OACE,SAACZ,EAAD,UACGF,EAAKe,KAAI,gBATMC,EASHpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,aAAcnB,EAArB,EAAqBA,KAAMoB,EAA3B,EAA2BA,UAA3B,OACR,UAACd,EAAD,YACE,SAACC,EAAD,CAAOc,KAXKH,EAWYC,EAVzBD,EAGC,kCAAN,OAAyCA,G,++UAOII,IAAI,MAC3C,SAACd,EAAD,UAAUR,KACV,SAACQ,EAAD,UAAUY,MAHAtB,EADJ,KAlBb,CA2BF,C","sources":["API/fetchMovies.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'c62a19b7b1f5a1f79f97b2c472539d70',\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  padding-bottom: 50px;\n  margin-bottom: 0;\n`;\n\nexport const Actor = styled.li``;\n\nexport const Photo = styled.img`\n  width: 220px;\n  height: auto;\n  border-radius: 10px;\n`;\n\nexport const Details = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: #1c1d2d;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'API/fetchMovies';\nimport { ActorsList, Actor, Photo, Details } from './Cast.styled';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport defaultImg from '../../img/1.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n  if (cast.length === 0) {\n    Report.info(\n      'No information found =(',\n      'Sorry, we do not have information about the actors',\n      'Okay'\n    );\n  }\n\n  const checkPoster = img => {\n    if (!img) {\n      return defaultImg;\n    }\n    return `https://image.tmdb.org/t/p/w500${img}`;\n  };\n\n  return (\n    <ActorsList>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Actor key={id}>\n          <Photo src={checkPoster(profile_path)} alt=\"\" />\n          <Details>{name}</Details>\n          <Details>{character}</Details>\n        </Actor>\n      ))}\n    </ActorsList>\n  );\n};\nexport default Cast;\n"],"names":["searchParams","URLSearchParams","api_key","axios","getTrendingMovies","data","results","getMovieDetails","id","getMovieByName","name","getMovieCast","cast","getMovieReviews","ActorsList","styled","Actor","Photo","Details","useState","setCast","movieId","useParams","useEffect","then","length","Report","map","img","profile_path","character","src","alt"],"sourceRoot":""}