{"version":3,"file":"static/js/771.89bb2fc5.chunk.js","mappings":"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","sources":["API/fetchMovies.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'c62a19b7b1f5a1f79f97b2c472539d70',\n});\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?${searchParams}`);\n  return data.results;\n};\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  display: flex;\n  padding: 55px;\n  box-shadow:  2px 2px 5px #9b8f90, -2px -2px 5px #ffeff0;\n`;\n\nexport const Poster = styled.img`\n  width: auto;\n  height: 500px;\n  border-radius: 15px;\n  background: #BDB76B;\n  box-shadow:  2px 2px 5px #9b8f90, -2px -2px 5px #ffeff0;\n`;\n\nexport const MovieInfo = styled.div`\n  width: 800px;\n  margin-left: 50px;\n  padding: 10px;\n  border-radius: 15px;\n  background: transparent;\n  box-shadow:  2px 2px 5px #9b8f90, -2px -2px 5px #ffeff0;\n`;\n\nexport const Title = styled.h2`\n  border-radius: 65px;\n  background: #BDB76B;\n  box-shadow: 2px 2px 5px #9b8f90, -2px -2px 5px #ffeff0;\n  width: 600px;\n  padding: 10px;\n  margin: 20px auto;\n  text-align: center;\n  letter-spacing: 1px;\n  color: #585b84;\n`;\n\nexport const Release = styled.span`\n  margin-left: 15px;\n`;\n\nexport const Details = styled.p`\n  font-size: 24px;\n  font-weight: bold;\n  letter-spacing: 1.1px;\n  color: #9e6164;\n`;\n\nexport const Info = styled.span`\n  color: #1c1d2d;\n  font-size: 22px;\n  font-weight: 500;\n`;\n","import {\n  Container,\n  Poster,\n  MovieInfo,\n  Title,\n  Release,\n  Details,\n  Info,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const releaseDate = release_date.slice(0, 4);\n  const voteScore = vote_average.toFixed(1);\n  const genresList = genres.map(ganre => ganre.name).join(', ');\n\n  return (\n    <Container>\n      <Poster src={imgUrl} alt=\"\" />\n      <MovieInfo>\n        <Title>\n          {title}\n          <Release>({releaseDate})</Release>\n        </Title>\n        <Details>\n          User rate: <Info>{voteScore}</Info>\n        </Details>\n        <Details>\n          Overview: <Info>{overview}</Info>\n        </Details>\n        <Details>\n          Genres: <Info>{genresList}</Info>\n        </Details>\n      </MovieInfo>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  text-decoration: none;\n  font-size: 22px;\n  font-weight: bold;\n  margin-left: 70px;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  width: 150px;\n  padding: 10px;\n  color: #5e447e;\n`;\n\nexport const NavButtons = styled.ul`\n  margin-bottom: 0;\n  margin-left: 30px;\n  padding-bottom: 50px;\n  display: flex;\n  gap: 50px;\n`;\n\nexport const Button = styled.li`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  text-decoration: none;\n  padding: 15px 25px;\n  &.active {\n    color: #d1ccd7;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from 'API/fetchMovies';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { GoBack, NavButtons, Button, LinkBtn } from './MovieDetails.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(setMovieDetails)\n      .catch(error => {\n        Report.info(\n          '404 error',\n          'Server is not responding, try another movie',\n          'Okay'\n        );\n      });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <GoBack to={backLink}>\n        <FaLongArrowAltLeft />\n        Go back\n      </GoBack>\n      <MovieCard movie={movieDetails} />\n      <NavButtons>\n        <Button>\n          <LinkBtn to={'cast'} state={{ from: backLink }}>\n            Cast\n          </LinkBtn>\n        </Button>\n        <Button>\n          <LinkBtn to={'reviews'} state={{ from: backLink }}>\n            Reviews\n          </LinkBtn>\n        </Button>\n      </NavButtons>\n      <Suspense fallback={<h3>Loading...</h3>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["searchParams","URLSearchParams","api_key","axios","getTrendingMovies","data","results","getMovieDetails","id","getMovieByName","name","getMovieCast","cast","getMovieReviews","Container","styled","Poster","MovieInfo","Title","Release","Details","Info","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","concat","releaseDate","slice","voteScore","toFixed","genresList","map","ganre","join","src","alt","GoBack","Link","NavButtons","Button","LinkBtn","NavLink","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","then","catch","error","Report","backLink","state","from","to","Suspense","fallback"],"sourceRoot":""}